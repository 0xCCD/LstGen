/**
 * This file is automatically generated by LstGen, do not edit!
 */
package tax

import ( "github.com/shopspring/decimal" )

type Lohnsteuer2014 struct {
    // ------------------------ Constants -------------------------

    /**
     * Tabelle fuer die Vomhundertsaetze des Versorgungsfreibetrags
     */
    TAB1 []decimal.Decimal

    /**
     * Tabelle fuer die Hoechstbetrage des Versorgungsfreibetrags
     */
    TAB2 []decimal.Decimal

    /**
     * Tabelle fuer die Zuschlaege zum Versorgungsfreibetrag
     */
    TAB3 []decimal.Decimal

    /**
     * Tabelle fuer die Vomhundertsaetze des Altersentlastungsbetrags
     */
    TAB4 []decimal.Decimal

    /**
     * Tabelle fuer die Hoechstbetraege des Altersentlastungsbetrags
     */
    TAB5 []decimal.Decimal

    /**
     * Zahlenkonstanten fuer im Plan oft genutzte BigDecimal Werte
     */
    ZAHL0 decimal.Decimal
    ZAHL1 decimal.Decimal
    ZAHL2 decimal.Decimal
    ZAHL3 decimal.Decimal
    ZAHL4 decimal.Decimal
    ZAHL5 decimal.Decimal
    ZAHL6 decimal.Decimal
    ZAHL7 decimal.Decimal
    ZAHL8 decimal.Decimal
    ZAHL9 decimal.Decimal
    ZAHL10 decimal.Decimal
    ZAHL11 decimal.Decimal
    ZAHL12 decimal.Decimal
    ZAHL100 decimal.Decimal
    ZAHL360 decimal.Decimal
    ZAHL500 decimal.Decimal
    ZAHL700 decimal.Decimal
    ZAHL1000 decimal.Decimal

    /**
     * Neuer Wert  2014
     */
    RENTBEMESSUNGSGR_OST decimal.Decimal

    /**
     * Neuer Wert 2014
     */
    RENTBEMESSUNGSGR_WEST decimal.Decimal

    // Input variables
    // ------------------------ Variables -------------------------

    /**
     * 1, wenn die Anwendung des Faktorverfahrens gewählt wurden (nur in Steuerklasse IV)
     */
    af int64

    /**
     * Auf die Vollendung des 64. Lebensjahres folgende
     * Kalenderjahr (erforderlich, wenn ALTER1=1)
     */
    AJAHR int64

    /**
     * 1, wenn das 64. Lebensjahr zu Beginn des Kalenderjahres vollendet wurde, in dem
     * der Lohnzahlungszeitraum endet (§ 24 a EStG), sonst = 0
     */
    ALTER1 int64

    /**
     * in VKAPA und VMT enthaltene Entschädigungen nach §24 Nummer 1 EStG in Cent
     */
    ENTSCH decimal.Decimal

    /**
     * eingetragener Faktor mit drei Nachkommastellen
     */
    f int64

    /**
     * Jahresfreibetrag nach Maßgabe der Eintragungen auf der
     * Lohnsteuerkarte in Cents (ggf. 0)
     */
    JFREIB decimal.Decimal

    /**
     * Jahreshinzurechnungsbetrag in Cents (ggf. 0)
     */
    JHINZU decimal.Decimal

    /**
     * Voraussichtlicher Jahresarbeitslohn ohne sonstige Bezüge und ohne Vergütung für mehrjährige Tätigkeit in Cent.
     * Anmerkung: Die Eingabe dieses Feldes (ggf. 0) ist erforderlich bei Eingabe „sonsti-ger Bezüge“ (Feld SONSTB)
     * oder bei Eingabe der „Vergütung für mehrjährige Tätigkeit“ (Feld VMT).
     * Sind in einem vorangegangenen Abrechnungszeitraum bereits sonstige Bezüge gezahlt worden, so sind sie dem
     * voraussichtlichen Jahresarbeitslohn hinzuzurechnen. Vergütungen für mehrere Jahres aus einem vorangegangenen
     * Abrechnungszeitraum sind in voller Höhe hinzuzurechnen.
     */
    JRE4 decimal.Decimal

    /**
     * In JRE4 enthaltene Versorgungsbezuege in Cents (ggf. 0)
     */
    JVBEZ decimal.Decimal

    /**
     * Merker für die Vorsorgepauschale
     * 2 = der Arbeitnehmer ist NICCHT in der gesetzlichen Rentenversicherung versichert.
     * 
     * 1 = der Arbeitnehmer ist in der gesetzlichen Rentenversicherung versichert, es gilt die
     * Beitragsbemessungsgrenze OST.
     * 
     * 0 = der Arbeitnehmer ist in der gesetzlichen Rentenversicherung versichert, es gilt die
     * Beitragsbemessungsgrenze WEST.
     */
    KRV int64

    /**
     * Lohnzahlungszeitraum:
     * 1 = Jahr
     * 2 = Monat
     * 3 = Woche
     * 4 = Tag
     */
    LZZ int64

    /**
     * In der Lohnsteuerkarte des Arbeitnehmers eingetragener Freibetrag für
     * den Lohnzahlungszeitraum in Cent
     */
    LZZFREIB decimal.Decimal

    /**
     * In der Lohnsteuerkarte des Arbeitnehmers eingetragener Hinzurechnungsbetrag
     * für den Lohnzahlungszeitraum in Cent
     */
    LZZHINZU decimal.Decimal

    /**
     * Dem Arbeitgeber mitgeteilte Zahlungen des Arbeitnehmers zur privaten
     * Kranken- bzw. Pflegeversicherung im Sinne des §10 Abs. 1 Nr. 3 EStG 2010
     * als Monatsbetrag in Cent (der Wert ist inabhängig vom Lohnzahlungszeitraum immer
     * als Monatsbetrag anzugeben).
     */
    PKPV decimal.Decimal

    /**
     * Krankenversicherung:
     * 0 = gesetzlich krankenversicherte Arbeitnehmer
     * 1 = ausschließlich privat krankenversicherte Arbeitnehmer OHNE Arbeitgeberzuschuss
     * 2 = ausschließlich privat krankenversicherte Arbeitnehmer MIT Arbeitgeberzuschuss
     */
    PKV int64

    /**
     * 1, wenn bei der sozialen Pflegeversicherung die Besonderheiten in Sachsen zu berücksichtigen sind bzw.
     * zu berücksichtigen wären, sonst 0.
     */
    PVS int64

    /**
     * 1, wenn er der Arbeitnehmer den Zuschlag zur sozialen Pflegeversicherung
     * zu zahlen hat, sonst 0.
     */
    PVZ int64

    /**
     * Religionsgemeinschaft des Arbeitnehmers lt. Lohnsteuerkarte (bei
     * keiner Religionszugehoerigkeit = 0)
     */
    R int64

    /**
     * Steuerpflichtiger Arbeitslohn vor Beruecksichtigung der Freibetraege
     * fuer Versorgungsbezuege, des Altersentlastungsbetrags und des auf
     * der Lohnsteuerkarte fuer den Lohnzahlungszeitraum eingetragenen
     * Freibetrags in Cents.
     */
    RE4 decimal.Decimal

    /**
     * Sonstige Bezuege (ohne Verguetung aus mehrjaehriger Taetigkeit) einschliesslich
     * Sterbegeld bei Versorgungsbezuegen sowie Kapitalauszahlungen/Abfindungen,
     * soweit es sich nicht um Bezuege fuer mehrere Jahre handelt in Cents (ggf. 0)
     */
    SONSTB decimal.Decimal

    /**
     * Sterbegeld bei Versorgungsbezuegen sowie Kapitalauszahlungen/Abfindungen,
     * soweit es sich nicht um Bezuege fuer mehrere Jahre handelt
     * (in SONSTB enthalten) in Cents
     */
    STERBE decimal.Decimal

    /**
     * Steuerklasse:
     * 1 = I
     * 2 = II
     * 3 = III
     * 4 = IV
     * 5 = V
     * 6 = VI
     */
    STKL int64

    /**
     * In RE4 enthaltene Versorgungsbezuege in Cents (ggf. 0)
     */
    VBEZ decimal.Decimal

    /**
     * Vorsorgungsbezug im Januar 2005 bzw. fuer den ersten vollen Monat
     * in Cents
     */
    VBEZM decimal.Decimal

    /**
     * Voraussichtliche Sonderzahlungen im Kalenderjahr des Versorgungsbeginns
     * bei Versorgungsempfaengern ohne Sterbegeld, Kapitalauszahlungen/Abfindungen
     * bei Versorgungsbezuegen in Cents
     */
    VBEZS decimal.Decimal

    /**
     * In SONSTB enthaltene Versorgungsbezuege einschliesslich Sterbegeld
     * in Cents (ggf. 0)
     */
    VBS decimal.Decimal

    /**
     * Jahr, in dem der Versorgungsbezug erstmalig gewaehrt wurde; werden
     * mehrere Versorgungsbezuege gezahlt, so gilt der aelteste erstmalige Bezug
     */
    VJAHR int64

    /**
     * Kapitalauszahlungen / Abfindungen / Nachzahlungen bei Versorgungsbezügen
     * für mehrere Jahre in Cent (ggf. 0)
     */
    VKAPA decimal.Decimal

    /**
     * Vergütung für mehrjährige Tätigkeit ohne Kapitalauszahlungen und ohne Abfindungen
     * bei Versorgungsbezügen in Cent (ggf. 0)
     */
    VMT decimal.Decimal

    /**
     * Zahl der Freibetraege fuer Kinder (eine Dezimalstelle, nur bei Steuerklassen
     * I, II, III und IV)
     */
    ZKF decimal.Decimal

    /**
     * Zahl der Monate, fuer die Versorgungsbezuege gezahlt werden (nur
     * erforderlich bei Jahresberechnung (LZZ = 1)
     */
    ZMVB int64

    /**
     * In JRE4 enthaltene Entschädigungen nach § 24 Nummer 1 EStG in Cent
     */
    JRE4ENT decimal.Decimal

    /**
     * In SONSTB enthaltene Entschädigungen nach § 24 Nummer 1 EStG in Cent
     */
    SONSTENT decimal.Decimal

    // Output variables
    // ------------------------ Variables -------------------------

    /**
     * Bemessungsgrundlage fuer die Kirchenlohnsteuer in Cents
     */
    BK decimal.Decimal

    /**
     * Bemessungsgrundlage der sonstigen Einkuenfte (ohne Verguetung
     * fuer mehrjaehrige Taetigkeit) fuer die Kirchenlohnsteuer in Cents
     */
    BKS decimal.Decimal
    BKV decimal.Decimal

    /**
     * Fuer den Lohnzahlungszeitraum einzubehaltende Lohnsteuer in Cents
     */
    LSTLZZ decimal.Decimal

    /**
     * Fuer den Lohnzahlungszeitraum einzubehaltender Solidaritaetszuschlag
     * in Cents
     */
    SOLZLZZ decimal.Decimal

    /**
     * Solidaritaetszuschlag fuer sonstige Bezuege (ohne Verguetung fuer mehrjaehrige
     * Taetigkeit) in Cents
     */
    SOLZS decimal.Decimal

    /**
     * Solidaritaetszuschlag fuer die Verguetung fuer mehrjaehrige Taetigkeit in
     * Cents
     */
    SOLZV decimal.Decimal

    /**
     * Lohnsteuer fuer sonstige Einkuenfte (ohne Verguetung fuer mehrjaehrige
     * Taetigkeit) in Cents
     */
    STS decimal.Decimal

    /**
     * Lohnsteuer fuer Verguetung fuer mehrjaehrige Taetigkeit in Cents
     */
    STV decimal.Decimal

    /**
     * Für den Lohnzahlungszeitraum berücksichtigte Beiträge des Arbeitnehmers zur
     * privaten Basis-Krankenversicherung und privaten Pflege-Pflichtversicherung (ggf. auch
     * die Mindestvorsorgepauschale) in Cent beim laufenden Arbeitslohn. Für Zwecke der Lohn-
     * steuerbescheinigung sind die einzelnen Ausgabewerte außerhalb des eigentlichen Lohn-
     * steuerbescheinigungsprogramms zu addieren; hinzuzurechnen sind auch die Ausgabewerte
     * VKVSONST
     */
    VKVLZZ decimal.Decimal

    /**
     * Für den Lohnzahlungszeitraum berücksichtigte Beiträge des Arbeitnehmers
     * zur privaten Basis-Krankenversicherung und privaten Pflege-Pflichtversicherung (ggf.
     * auch die Mindestvorsorgepauschale) in Cent bei sonstigen Bezügen. Der Ausgabewert kann
     * auch negativ sein. Für tarifermäßigt zu besteuernde Vergütungen für mehrjährige
     * Tätigkeiten enthält der PAP keinen entsprechenden Ausgabewert.
     */
    VKVSONST decimal.Decimal

    // Internal variables
    // ------------------------ Variables -------------------------

    /**
     * spezielles ZVE f. Einkommensteuer-Berechnung, dieses darf negativ werden.
     */
    zveEkSt decimal.Decimal
    zveGemeinsam decimal.Decimal

    /**
     * Altersentlastungsbetrag nach Alterseinkünftegesetz in €,
     * Cent (2 Dezimalstellen)
     */
    ALTE decimal.Decimal

    /**
     * Arbeitnehmer-Pauschbetrag in EURO
     */
    ANP decimal.Decimal

    /**
     * Auf den Lohnzahlungszeitraum entfallender Anteil von Jahreswerten
     * auf ganze Cents abgerundet
     */
    ANTEIL1 decimal.Decimal

    /**
     * Bemessungsgrundlage für Altersentlastungsbetrag in €, Cent
     * (2 Dezimalstellen)
     */
    BMG decimal.Decimal

    /**
     * Differenz zwischen ST1 und ST2 in EURO
     */
    DIFF decimal.Decimal

    /**
     * Entlastungsbetrag fuer Alleinerziehende in EURO
     */
    EFA decimal.Decimal

    /**
     * Versorgungsfreibetrag in €, Cent (2 Dezimalstellen)
     */
    FVB decimal.Decimal

    /**
     * Versorgungsfreibetrag in €, Cent (2 Dezimalstellen) für die Berechnung
     * der Lohnsteuer für den sonstigen Bezug
     */
    FVBSO decimal.Decimal

    /**
     * Zuschlag zum Versorgungsfreibetrag in EURO
     */
    FVBZ decimal.Decimal

    /**
     * Zuschlag zum Versorgungsfreibetrag in EURO fuer die Berechnung
     * der Lohnsteuer beim sonstigen Bezug
     */
    FVBZSO decimal.Decimal

    /**
     * Maximaler Altersentlastungsbetrag in €
     */
    HBALTE decimal.Decimal

    /**
     * Massgeblicher maximaler Versorgungsfreibetrag in €
     */
    HFVB decimal.Decimal

    /**
     * Massgeblicher maximaler Zuschlag zum Versorgungsfreibetrag in €,Cent
     * (2 Dezimalstellen)
     */
    HFVBZ decimal.Decimal

    /**
     * Massgeblicher maximaler Zuschlag zum Versorgungsfreibetrag in €, Cent
     * (2 Dezimalstellen) für die Berechnung der Lohnsteuer für den
     * sonstigen Bezug
     */
    HFVBZSO decimal.Decimal

    /**
     * Nummer der Tabellenwerte fuer Versorgungsparameter
     */
    J int64

    /**
     * Jahressteuer nach § 51a EStG, aus der Solidaritaetszuschlag und
     * Bemessungsgrundlage fuer die Kirchenlohnsteuer ermittelt werden in EURO
     */
    JBMG decimal.Decimal

    /**
     * Auf einen Jahreslohn hochgerechneter LZZFREIB in €, Cent
     * (2 Dezimalstellen)
     */
    JLFREIB decimal.Decimal

    /**
     * Auf einen Jahreslohn hochgerechnete LZZHINZU in €, Cent
     * (2 Dezimalstellen)
     */
    JLHINZU decimal.Decimal

    /**
     * Jahreswert, dessen Anteil fuer einen Lohnzahlungszeitraum in
     * UPANTEIL errechnet werden soll in Cents
     */
    JW decimal.Decimal

    /**
     * Nummer der Tabellenwerte fuer Parameter bei Altersentlastungsbetrag
     */
    K int64

    /**
     * Merker für Berechnung Lohnsteuer für mehrjährige Tätigkeit.
     * 0 = normale Steuerberechnung
     * 1 = Steuerberechnung für mehrjährige Tätigkeit
     * 2 = entfällt
     */
    KENNVMT int64

    /**
     * Summe der Freibetraege fuer Kinder in EURO
     */
    KFB decimal.Decimal

    /**
     * Beitragssatz des Arbeitgebers zur Krankenversicherung
     */
    KVSATZAG decimal.Decimal

    /**
     * Beitragssatz des Arbeitnehmers zur Krankenversicherung
     */
    KVSATZAN decimal.Decimal

    /**
     * Kennzahl fuer die Einkommensteuer-Tabellenart:
     * 1 = Grundtabelle
     * 2 = Splittingtabelle
     */
    KZTAB int64

    /**
     * Jahreslohnsteuer in EURO
     */
    LSTJAHR decimal.Decimal

    /**
     * Zwischenfelder der Jahreslohnsteuer in Cent
     */
    LST1 decimal.Decimal
    LST2 decimal.Decimal
    LST3 decimal.Decimal
    LSTOSO decimal.Decimal
    LSTSO decimal.Decimal

    /**
     * Mindeststeuer fuer die Steuerklassen V und VI in EURO
     */
    MIST decimal.Decimal

    /**
     * Beitragssatz des Arbeitgebers zur Pflegeversicherung
     */
    PVSATZAG decimal.Decimal

    /**
     * Beitragssatz des Arbeitnehmers zur Pflegeversicherung
     */
    PVSATZAN decimal.Decimal

    /**
     * Rechenwert in Gleitkommadarstellung
     */
    RW decimal.Decimal

    /**
     * Sonderausgaben-Pauschbetrag in EURO
     */
    SAP decimal.Decimal

    /**
     * Freigrenze fuer den Solidaritaetszuschlag in EURO
     */
    SOLZFREI decimal.Decimal

    /**
     * Solidaritaetszuschlag auf die Jahreslohnsteuer in EURO, C (2 Dezimalstellen)
     */
    SOLZJ decimal.Decimal

    /**
     * Zwischenwert fuer den Solidaritaetszuschlag auf die Jahreslohnsteuer
     * in EURO, C (2 Dezimalstellen)
     */
    SOLZMIN decimal.Decimal

    /**
     * Tarifliche Einkommensteuer in EURO
     */
    ST decimal.Decimal

    /**
     * Tarifliche Einkommensteuer auf das 1,25-fache ZX in EURO
     */
    ST1 decimal.Decimal

    /**
     * Tarifliche Einkommensteuer auf das 0,75-fache ZX in EURO
     */
    ST2 decimal.Decimal

    /**
     * Zwischenfeld zur Ermittlung der Steuer auf Vergütungen für mehrjährige Tätigkeit
     */
    STOVMT decimal.Decimal

    /**
     * Bemessungsgrundlage fuer den Versorgungsfreibetrag in Cents
     */
    VBEZB decimal.Decimal

    /**
     * Bemessungsgrundlage für den Versorgungsfreibetrag in Cent für
     * den sonstigen Bezug
     */
    VBEZBSO decimal.Decimal

    /**
     * Hoechstbetrag der Vorsorgepauschale nach Alterseinkuenftegesetz in EURO, C
     */
    VHB decimal.Decimal

    /**
     * Vorsorgepauschale in EURO, C (2 Dezimalstellen)
     */
    VSP decimal.Decimal

    /**
     * Vorsorgepauschale nach Alterseinkuenftegesetz in EURO, C
     */
    VSPN decimal.Decimal

    /**
     * Zwischenwert 1 bei der Berechnung der Vorsorgepauschale nach
     * dem Alterseinkuenftegesetz in EURO, C (2 Dezimalstellen)
     */
    VSP1 decimal.Decimal

    /**
     * Zwischenwert 2 bei der Berechnung der Vorsorgepauschale nach
     * dem Alterseinkuenftegesetz in EURO, C (2 Dezimalstellen)
     */
    VSP2 decimal.Decimal

    /**
     * Vorsorgepauschale mit Teilbeträgen für die gesetzliche Kranken- und
     * soziale Pflegeversicherung nach fiktiven Beträgen oder ggf. für die
     * private Basiskrankenversicherung und private Pflege-Pflichtversicherung
     * in Euro, Cent (2 Dezimalstellen)
     */
    VSP3 decimal.Decimal

    /**
     * Hoechstbetrag der Vorsorgepauschale nach § 10c Abs. 3 EStG in EURO
     */
    VSPKURZ decimal.Decimal

    /**
     * Hoechstbetrag der Vorsorgepauschale nach § 10c Abs. 2 Nr. 2 EStG in EURO
     */
    VSPMAX1 decimal.Decimal

    /**
     * Hoechstbetrag der Vorsorgepauschale nach § 10c Abs. 2 Nr. 3 EStG in EURO
     */
    VSPMAX2 decimal.Decimal

    /**
     * Vorsorgepauschale nach § 10c Abs. 2 Satz 2 EStG vor der Hoechstbetragsberechnung
     * in EURO, C (2 Dezimalstellen)
     */
    VSPO decimal.Decimal

    /**
     * Fuer den Abzug nach § 10c Abs. 2 Nrn. 2 und 3 EStG verbleibender
     * Rest von VSPO in EURO, C (2 Dezimalstellen)
     */
    VSPREST decimal.Decimal

    /**
     * Hoechstbetrag der Vorsorgepauschale nach § 10c Abs. 2 Nr. 1 EStG
     * in EURO, C (2 Dezimalstellen)
     */
    VSPVOR decimal.Decimal

    /**
     * Zu versteuerndes Einkommen gem. § 32a Abs. 1 und 2 EStG €, C
     * (2 Dezimalstellen)
     */
    X decimal.Decimal

    /**
     * gem. § 32a Abs. 1 EStG (6 Dezimalstellen)
     */
    Y decimal.Decimal

    /**
     * Auf einen Jahreslohn hochgerechnetes RE4 in €, C (2 Dezimalstellen)
     * nach Abzug der Freibeträge nach § 39 b Abs. 2 Satz 3 und 4.
     */
    ZRE4 decimal.Decimal

    /**
     * Auf einen Jahreslohn hochgerechnetes RE4 in €, C (2 Dezimalstellen)
     */
    ZRE4J decimal.Decimal

    /**
     * Auf einen Jahreslohn hochgerechnetes RE4 in €, C (2 Dezimalstellen)
     * nach Abzug des Versorgungsfreibetrags und des Alterentlastungsbetrags
     * zur Berechnung der Vorsorgepauschale in €, Cent (2 Dezimalstellen)
     */
    ZRE4VP decimal.Decimal

    /**
     * Feste Tabellenfreibeträge (ohne Vorsorgepauschale) in €, Cent
     * (2 Dezimalstellen)
     */
    ZTABFB decimal.Decimal

    /**
     * Auf einen Jahreslohn hochgerechnetes (VBEZ abzueglich FVB) in
     * EURO, C (2 Dezimalstellen)
     */
    ZVBEZ decimal.Decimal

    /**
     * Auf einen Jahreslohn hochgerechnetes VBEZ in €, C (2 Dezimalstellen)
     */
    ZVBEZJ decimal.Decimal

    /**
     * Zu versteuerndes Einkommen in €, C (2 Dezimalstellen)
     */
    ZVE decimal.Decimal

    /**
     * Zwischenfelder zu X fuer die Berechnung der Steuer nach § 39b
     * Abs. 2 Satz 7 EStG in €
     */
    ZX decimal.Decimal
    ZZX decimal.Decimal
    HOCH decimal.Decimal
    VERGL decimal.Decimal

    /**
     * Jahreswert der berücksichtigten Beiträge zur privaten Basis-Krankenversicherung und
     * privaten Pflege-Pflichtversicherung (ggf. auch die Mindestvorsorgepauschale) in Cent.
     */
    VKV decimal.Decimal
}
func New() *Lohnsteuer2014 {
    return &Lohnsteuer2014 {
        // ------------------------ Constants -------------------------

        /**
         * Tabelle fuer die Vomhundertsaetze des Versorgungsfreibetrags
         */
        TAB1: []decimal.Decimal{decimal.NewFromFloat(0.0), decimal.NewFromFloat(0.4), decimal.NewFromFloat(0.384), decimal.NewFromFloat(0.368), decimal.NewFromFloat(0.352), decimal.NewFromFloat(0.336), decimal.NewFromFloat(0.32), decimal.NewFromFloat(0.304), decimal.NewFromFloat(0.288), decimal.NewFromFloat(0.272), decimal.NewFromFloat(0.256), decimal.NewFromFloat(0.24), decimal.NewFromFloat(0.224), decimal.NewFromFloat(0.208), decimal.NewFromFloat(0.192), decimal.NewFromFloat(0.176), decimal.NewFromFloat(0.16), decimal.NewFromFloat(0.152), decimal.NewFromFloat(0.144), decimal.NewFromFloat(0.136), decimal.NewFromFloat(0.128), decimal.NewFromFloat(0.12), decimal.NewFromFloat(0.112), decimal.NewFromFloat(0.104), decimal.NewFromFloat(0.096), decimal.NewFromFloat(0.088), decimal.NewFromFloat(0.08), decimal.NewFromFloat(0.072), decimal.NewFromFloat(0.064), decimal.NewFromFloat(0.056), decimal.NewFromFloat(0.048), decimal.NewFromFloat(0.04), decimal.NewFromFloat(0.032), decimal.NewFromFloat(0.024), decimal.NewFromFloat(0.016), decimal.NewFromFloat(0.008), decimal.NewFromFloat(0.0)},

        /**
         * Tabelle fuer die Hoechstbetrage des Versorgungsfreibetrags
         */
        TAB2: []decimal.Decimal{decimal.NewFromInt(0), decimal.NewFromInt(3000), decimal.NewFromInt(2880), decimal.NewFromInt(2760), decimal.NewFromInt(2640), decimal.NewFromInt(2520), decimal.NewFromInt(2400), decimal.NewFromInt(2280), decimal.NewFromInt(2160), decimal.NewFromInt(2040), decimal.NewFromInt(1920), decimal.NewFromInt(1800), decimal.NewFromInt(1680), decimal.NewFromInt(1560), decimal.NewFromInt(1440), decimal.NewFromInt(1320), decimal.NewFromInt(1200), decimal.NewFromInt(1140), decimal.NewFromInt(1080), decimal.NewFromInt(1020), decimal.NewFromInt(960), decimal.NewFromInt(900), decimal.NewFromInt(840), decimal.NewFromInt(780), decimal.NewFromInt(720), decimal.NewFromInt(660), decimal.NewFromInt(600), decimal.NewFromInt(540), decimal.NewFromInt(480), decimal.NewFromInt(420), decimal.NewFromInt(360), decimal.NewFromInt(300), decimal.NewFromInt(240), decimal.NewFromInt(180), decimal.NewFromInt(120), decimal.NewFromInt(60), decimal.NewFromInt(0)},

        /**
         * Tabelle fuer die Zuschlaege zum Versorgungsfreibetrag
         */
        TAB3: []decimal.Decimal{decimal.NewFromInt(0), decimal.NewFromInt(900), decimal.NewFromInt(864), decimal.NewFromInt(828), decimal.NewFromInt(792), decimal.NewFromInt(756), decimal.NewFromInt(720), decimal.NewFromInt(684), decimal.NewFromInt(648), decimal.NewFromInt(612), decimal.NewFromInt(576), decimal.NewFromInt(540), decimal.NewFromInt(504), decimal.NewFromInt(468), decimal.NewFromInt(432), decimal.NewFromInt(396), decimal.NewFromInt(360), decimal.NewFromInt(342), decimal.NewFromInt(324), decimal.NewFromInt(306), decimal.NewFromInt(288), decimal.NewFromInt(270), decimal.NewFromInt(252), decimal.NewFromInt(234), decimal.NewFromInt(216), decimal.NewFromInt(198), decimal.NewFromInt(180), decimal.NewFromInt(162), decimal.NewFromInt(144), decimal.NewFromInt(126), decimal.NewFromInt(108), decimal.NewFromInt(90), decimal.NewFromInt(72), decimal.NewFromInt(54), decimal.NewFromInt(36), decimal.NewFromInt(18), decimal.NewFromInt(0)},

        /**
         * Tabelle fuer die Vomhundertsaetze des Altersentlastungsbetrags
         */
        TAB4: []decimal.Decimal{decimal.NewFromFloat(0.0), decimal.NewFromFloat(0.4), decimal.NewFromFloat(0.384), decimal.NewFromFloat(0.368), decimal.NewFromFloat(0.352), decimal.NewFromFloat(0.336), decimal.NewFromFloat(0.32), decimal.NewFromFloat(0.304), decimal.NewFromFloat(0.288), decimal.NewFromFloat(0.272), decimal.NewFromFloat(0.256), decimal.NewFromFloat(0.24), decimal.NewFromFloat(0.224), decimal.NewFromFloat(0.208), decimal.NewFromFloat(0.192), decimal.NewFromFloat(0.176), decimal.NewFromFloat(0.16), decimal.NewFromFloat(0.152), decimal.NewFromFloat(0.144), decimal.NewFromFloat(0.136), decimal.NewFromFloat(0.128), decimal.NewFromFloat(0.12), decimal.NewFromFloat(0.112), decimal.NewFromFloat(0.104), decimal.NewFromFloat(0.096), decimal.NewFromFloat(0.088), decimal.NewFromFloat(0.08), decimal.NewFromFloat(0.072), decimal.NewFromFloat(0.064), decimal.NewFromFloat(0.056), decimal.NewFromFloat(0.048), decimal.NewFromFloat(0.04), decimal.NewFromFloat(0.032), decimal.NewFromFloat(0.024), decimal.NewFromFloat(0.016), decimal.NewFromFloat(0.008), decimal.NewFromFloat(0.0)},

        /**
         * Tabelle fuer die Hoechstbetraege des Altersentlastungsbetrags
         */
        TAB5: []decimal.Decimal{decimal.NewFromInt(0), decimal.NewFromInt(1900), decimal.NewFromInt(1824), decimal.NewFromInt(1748), decimal.NewFromInt(1672), decimal.NewFromInt(1596), decimal.NewFromInt(1520), decimal.NewFromInt(1444), decimal.NewFromInt(1368), decimal.NewFromInt(1292), decimal.NewFromInt(1216), decimal.NewFromInt(1140), decimal.NewFromInt(1064), decimal.NewFromInt(988), decimal.NewFromInt(912), decimal.NewFromInt(836), decimal.NewFromInt(760), decimal.NewFromInt(722), decimal.NewFromInt(684), decimal.NewFromInt(646), decimal.NewFromInt(608), decimal.NewFromInt(570), decimal.NewFromInt(532), decimal.NewFromInt(494), decimal.NewFromInt(456), decimal.NewFromInt(418), decimal.NewFromInt(380), decimal.NewFromInt(342), decimal.NewFromInt(304), decimal.NewFromInt(266), decimal.NewFromInt(228), decimal.NewFromInt(190), decimal.NewFromInt(152), decimal.NewFromInt(114), decimal.NewFromInt(76), decimal.NewFromInt(38), decimal.NewFromInt(0)},

        /**
         * Zahlenkonstanten fuer im Plan oft genutzte BigDecimal Werte
         */
        ZAHL0: decimal.NewFromInt(0),
        ZAHL1: decimal.NewFromInt(1),
        ZAHL2: decimal.NewFromInt(2),
        ZAHL3: decimal.NewFromInt(3),
        ZAHL4: decimal.NewFromInt(4),
        ZAHL5: decimal.NewFromInt(5),
        ZAHL6: decimal.NewFromInt(6),
        ZAHL7: decimal.NewFromInt(7),
        ZAHL8: decimal.NewFromInt(8),
        ZAHL9: decimal.NewFromInt(9),
        ZAHL10: decimal.NewFromInt(10),
        ZAHL11: decimal.NewFromInt(11),
        ZAHL12: decimal.NewFromInt(12),
        ZAHL100: decimal.NewFromInt(100),
        ZAHL360: decimal.NewFromInt(360),
        ZAHL500: decimal.NewFromInt(500),
        ZAHL700: decimal.NewFromInt(700),
        ZAHL1000: decimal.NewFromInt(1000),

        /**
         * Neuer Wert  2014
         */
        RENTBEMESSUNGSGR_OST: decimal.NewFromInt(60000),

        /**
         * Neuer Wert 2014
         */
        RENTBEMESSUNGSGR_WEST: decimal.NewFromInt(71400),

        // ------------------------ Variables -------------------------

        /**
         * 1, wenn die Anwendung des Faktorverfahrens gewählt wurden (nur in Steuerklasse IV)
         */
        af: 1,

        /**
         * Auf die Vollendung des 64. Lebensjahres folgende
         * Kalenderjahr (erforderlich, wenn ALTER1=1)
         */
        AJAHR: 0,

        /**
         * 1, wenn das 64. Lebensjahr zu Beginn des Kalenderjahres vollendet wurde, in dem
         * der Lohnzahlungszeitraum endet (§ 24 a EStG), sonst = 0
         */
        ALTER1: 0,

        /**
         * in VKAPA und VMT enthaltene Entschädigungen nach §24 Nummer 1 EStG in Cent
         */
        ENTSCH: decimal.NewFromInt(0),

        /**
         * eingetragener Faktor mit drei Nachkommastellen
         */
        f: 1.0,

        /**
         * Jahresfreibetrag nach Maßgabe der Eintragungen auf der
         * Lohnsteuerkarte in Cents (ggf. 0)
         */
        JFREIB: decimal.NewFromInt(0),

        /**
         * Jahreshinzurechnungsbetrag in Cents (ggf. 0)
         */
        JHINZU: decimal.NewFromInt(0),

        /**
         * Voraussichtlicher Jahresarbeitslohn ohne sonstige Bezüge und ohne Vergütung für mehrjährige Tätigkeit in Cent.
         * Anmerkung: Die Eingabe dieses Feldes (ggf. 0) ist erforderlich bei Eingabe „sonsti-ger Bezüge“ (Feld SONSTB)
         * oder bei Eingabe der „Vergütung für mehrjährige Tätigkeit“ (Feld VMT).
         * Sind in einem vorangegangenen Abrechnungszeitraum bereits sonstige Bezüge gezahlt worden, so sind sie dem
         * voraussichtlichen Jahresarbeitslohn hinzuzurechnen. Vergütungen für mehrere Jahres aus einem vorangegangenen
         * Abrechnungszeitraum sind in voller Höhe hinzuzurechnen.
         */
        JRE4: decimal.NewFromInt(0),

        /**
         * In JRE4 enthaltene Versorgungsbezuege in Cents (ggf. 0)
         */
        JVBEZ: decimal.NewFromInt(0),

        /**
         * Merker für die Vorsorgepauschale
         * 2 = der Arbeitnehmer ist NICCHT in der gesetzlichen Rentenversicherung versichert.
         * 
         * 1 = der Arbeitnehmer ist in der gesetzlichen Rentenversicherung versichert, es gilt die
         * Beitragsbemessungsgrenze OST.
         * 
         * 0 = der Arbeitnehmer ist in der gesetzlichen Rentenversicherung versichert, es gilt die
         * Beitragsbemessungsgrenze WEST.
         */
        KRV: 0,

        /**
         * Lohnzahlungszeitraum:
         * 1 = Jahr
         * 2 = Monat
         * 3 = Woche
         * 4 = Tag
         */
        LZZ: 0,

        /**
         * In der Lohnsteuerkarte des Arbeitnehmers eingetragener Freibetrag für
         * den Lohnzahlungszeitraum in Cent
         */
        LZZFREIB: decimal.NewFromInt(0),

        /**
         * In der Lohnsteuerkarte des Arbeitnehmers eingetragener Hinzurechnungsbetrag
         * für den Lohnzahlungszeitraum in Cent
         */
        LZZHINZU: decimal.NewFromInt(0),

        /**
         * Dem Arbeitgeber mitgeteilte Zahlungen des Arbeitnehmers zur privaten
         * Kranken- bzw. Pflegeversicherung im Sinne des §10 Abs. 1 Nr. 3 EStG 2010
         * als Monatsbetrag in Cent (der Wert ist inabhängig vom Lohnzahlungszeitraum immer
         * als Monatsbetrag anzugeben).
         */
        PKPV: decimal.NewFromInt(0),

        /**
         * Krankenversicherung:
         * 0 = gesetzlich krankenversicherte Arbeitnehmer
         * 1 = ausschließlich privat krankenversicherte Arbeitnehmer OHNE Arbeitgeberzuschuss
         * 2 = ausschließlich privat krankenversicherte Arbeitnehmer MIT Arbeitgeberzuschuss
         */
        PKV: 0,

        /**
         * 1, wenn bei der sozialen Pflegeversicherung die Besonderheiten in Sachsen zu berücksichtigen sind bzw.
         * zu berücksichtigen wären, sonst 0.
         */
        PVS: 0,

        /**
         * 1, wenn er der Arbeitnehmer den Zuschlag zur sozialen Pflegeversicherung
         * zu zahlen hat, sonst 0.
         */
        PVZ: 0,

        /**
         * Religionsgemeinschaft des Arbeitnehmers lt. Lohnsteuerkarte (bei
         * keiner Religionszugehoerigkeit = 0)
         */
        R: 0,

        /**
         * Steuerpflichtiger Arbeitslohn vor Beruecksichtigung der Freibetraege
         * fuer Versorgungsbezuege, des Altersentlastungsbetrags und des auf
         * der Lohnsteuerkarte fuer den Lohnzahlungszeitraum eingetragenen
         * Freibetrags in Cents.
         */
        RE4: decimal.NewFromInt(0),

        /**
         * Sonstige Bezuege (ohne Verguetung aus mehrjaehriger Taetigkeit) einschliesslich
         * Sterbegeld bei Versorgungsbezuegen sowie Kapitalauszahlungen/Abfindungen,
         * soweit es sich nicht um Bezuege fuer mehrere Jahre handelt in Cents (ggf. 0)
         */
        SONSTB: decimal.NewFromInt(0),

        /**
         * Sterbegeld bei Versorgungsbezuegen sowie Kapitalauszahlungen/Abfindungen,
         * soweit es sich nicht um Bezuege fuer mehrere Jahre handelt
         * (in SONSTB enthalten) in Cents
         */
        STERBE: decimal.NewFromInt(0),

        /**
         * Steuerklasse:
         * 1 = I
         * 2 = II
         * 3 = III
         * 4 = IV
         * 5 = V
         * 6 = VI
         */
        STKL: 0,

        /**
         * In RE4 enthaltene Versorgungsbezuege in Cents (ggf. 0)
         */
        VBEZ: decimal.NewFromInt(0),

        /**
         * Vorsorgungsbezug im Januar 2005 bzw. fuer den ersten vollen Monat
         * in Cents
         */
        VBEZM: decimal.NewFromInt(0),

        /**
         * Voraussichtliche Sonderzahlungen im Kalenderjahr des Versorgungsbeginns
         * bei Versorgungsempfaengern ohne Sterbegeld, Kapitalauszahlungen/Abfindungen
         * bei Versorgungsbezuegen in Cents
         */
        VBEZS: decimal.NewFromInt(0),

        /**
         * In SONSTB enthaltene Versorgungsbezuege einschliesslich Sterbegeld
         * in Cents (ggf. 0)
         */
        VBS: decimal.NewFromInt(0),

        /**
         * Jahr, in dem der Versorgungsbezug erstmalig gewaehrt wurde; werden
         * mehrere Versorgungsbezuege gezahlt, so gilt der aelteste erstmalige Bezug
         */
        VJAHR: 0,

        /**
         * Kapitalauszahlungen / Abfindungen / Nachzahlungen bei Versorgungsbezügen
         * für mehrere Jahre in Cent (ggf. 0)
         */
        VKAPA: decimal.NewFromInt(0),

        /**
         * Vergütung für mehrjährige Tätigkeit ohne Kapitalauszahlungen und ohne Abfindungen
         * bei Versorgungsbezügen in Cent (ggf. 0)
         */
        VMT: decimal.NewFromInt(0),

        /**
         * Zahl der Freibetraege fuer Kinder (eine Dezimalstelle, nur bei Steuerklassen
         * I, II, III und IV)
         */
        ZKF: decimal.NewFromInt(0),

        /**
         * Zahl der Monate, fuer die Versorgungsbezuege gezahlt werden (nur
         * erforderlich bei Jahresberechnung (LZZ = 1)
         */
        ZMVB: 0,

        /**
         * In JRE4 enthaltene Entschädigungen nach § 24 Nummer 1 EStG in Cent
         */
        JRE4ENT: decimal.NewFromInt(0),

        /**
         * In SONSTB enthaltene Entschädigungen nach § 24 Nummer 1 EStG in Cent
         */
        SONSTENT: decimal.NewFromInt(0),

        /**
         * Bemessungsgrundlage fuer die Kirchenlohnsteuer in Cents
         */
        BK: decimal.NewFromInt(0),

        /**
         * Bemessungsgrundlage der sonstigen Einkuenfte (ohne Verguetung
         * fuer mehrjaehrige Taetigkeit) fuer die Kirchenlohnsteuer in Cents
         */
        BKS: decimal.NewFromInt(0),
        BKV: decimal.NewFromInt(0),

        /**
         * Fuer den Lohnzahlungszeitraum einzubehaltende Lohnsteuer in Cents
         */
        LSTLZZ: decimal.NewFromInt(0),

        /**
         * Fuer den Lohnzahlungszeitraum einzubehaltender Solidaritaetszuschlag
         * in Cents
         */
        SOLZLZZ: decimal.NewFromInt(0),

        /**
         * Solidaritaetszuschlag fuer sonstige Bezuege (ohne Verguetung fuer mehrjaehrige
         * Taetigkeit) in Cents
         */
        SOLZS: decimal.NewFromInt(0),

        /**
         * Solidaritaetszuschlag fuer die Verguetung fuer mehrjaehrige Taetigkeit in
         * Cents
         */
        SOLZV: decimal.NewFromInt(0),

        /**
         * Lohnsteuer fuer sonstige Einkuenfte (ohne Verguetung fuer mehrjaehrige
         * Taetigkeit) in Cents
         */
        STS: decimal.NewFromInt(0),

        /**
         * Lohnsteuer fuer Verguetung fuer mehrjaehrige Taetigkeit in Cents
         */
        STV: decimal.NewFromInt(0),

        /**
         * Für den Lohnzahlungszeitraum berücksichtigte Beiträge des Arbeitnehmers zur
         * privaten Basis-Krankenversicherung und privaten Pflege-Pflichtversicherung (ggf. auch
         * die Mindestvorsorgepauschale) in Cent beim laufenden Arbeitslohn. Für Zwecke der Lohn-
         * steuerbescheinigung sind die einzelnen Ausgabewerte außerhalb des eigentlichen Lohn-
         * steuerbescheinigungsprogramms zu addieren; hinzuzurechnen sind auch die Ausgabewerte
         * VKVSONST
         */
        VKVLZZ: decimal.NewFromInt(0),

        /**
         * Für den Lohnzahlungszeitraum berücksichtigte Beiträge des Arbeitnehmers
         * zur privaten Basis-Krankenversicherung und privaten Pflege-Pflichtversicherung (ggf.
         * auch die Mindestvorsorgepauschale) in Cent bei sonstigen Bezügen. Der Ausgabewert kann
         * auch negativ sein. Für tarifermäßigt zu besteuernde Vergütungen für mehrjährige
         * Tätigkeiten enthält der PAP keinen entsprechenden Ausgabewert.
         */
        VKVSONST: decimal.NewFromInt(0),

        /**
         * spezielles ZVE f. Einkommensteuer-Berechnung, dieses darf negativ werden.
         */
        zveEkSt: decimal.NewFromInt(0),
        zveGemeinsam: decimal.NewFromInt(0),

        /**
         * Altersentlastungsbetrag nach Alterseinkünftegesetz in €,
         * Cent (2 Dezimalstellen)
         */
        ALTE: decimal.NewFromInt(0),

        /**
         * Arbeitnehmer-Pauschbetrag in EURO
         */
        ANP: decimal.NewFromInt(0),

        /**
         * Auf den Lohnzahlungszeitraum entfallender Anteil von Jahreswerten
         * auf ganze Cents abgerundet
         */
        ANTEIL1: decimal.NewFromInt(0),

        /**
         * Bemessungsgrundlage für Altersentlastungsbetrag in €, Cent
         * (2 Dezimalstellen)
         */
        BMG: decimal.NewFromInt(0),

        /**
         * Differenz zwischen ST1 und ST2 in EURO
         */
        DIFF: decimal.NewFromInt(0),

        /**
         * Entlastungsbetrag fuer Alleinerziehende in EURO
         */
        EFA: decimal.NewFromInt(0),

        /**
         * Versorgungsfreibetrag in €, Cent (2 Dezimalstellen)
         */
        FVB: decimal.NewFromInt(0),

        /**
         * Versorgungsfreibetrag in €, Cent (2 Dezimalstellen) für die Berechnung
         * der Lohnsteuer für den sonstigen Bezug
         */
        FVBSO: decimal.NewFromInt(0),

        /**
         * Zuschlag zum Versorgungsfreibetrag in EURO
         */
        FVBZ: decimal.NewFromInt(0),

        /**
         * Zuschlag zum Versorgungsfreibetrag in EURO fuer die Berechnung
         * der Lohnsteuer beim sonstigen Bezug
         */
        FVBZSO: decimal.NewFromInt(0),

        /**
         * Maximaler Altersentlastungsbetrag in €
         */
        HBALTE: decimal.NewFromInt(0),

        /**
         * Massgeblicher maximaler Versorgungsfreibetrag in €
         */
        HFVB: decimal.NewFromInt(0),

        /**
         * Massgeblicher maximaler Zuschlag zum Versorgungsfreibetrag in €,Cent
         * (2 Dezimalstellen)
         */
        HFVBZ: decimal.NewFromInt(0),

        /**
         * Massgeblicher maximaler Zuschlag zum Versorgungsfreibetrag in €, Cent
         * (2 Dezimalstellen) für die Berechnung der Lohnsteuer für den
         * sonstigen Bezug
         */
        HFVBZSO: decimal.NewFromInt(0),

        /**
         * Nummer der Tabellenwerte fuer Versorgungsparameter
         */
        J: 0,

        /**
         * Jahressteuer nach § 51a EStG, aus der Solidaritaetszuschlag und
         * Bemessungsgrundlage fuer die Kirchenlohnsteuer ermittelt werden in EURO
         */
        JBMG: decimal.NewFromInt(0),

        /**
         * Auf einen Jahreslohn hochgerechneter LZZFREIB in €, Cent
         * (2 Dezimalstellen)
         */
        JLFREIB: decimal.NewFromInt(0),

        /**
         * Auf einen Jahreslohn hochgerechnete LZZHINZU in €, Cent
         * (2 Dezimalstellen)
         */
        JLHINZU: decimal.NewFromInt(0),

        /**
         * Jahreswert, dessen Anteil fuer einen Lohnzahlungszeitraum in
         * UPANTEIL errechnet werden soll in Cents
         */
        JW: decimal.NewFromInt(0),

        /**
         * Nummer der Tabellenwerte fuer Parameter bei Altersentlastungsbetrag
         */
        K: 0,

        /**
         * Merker für Berechnung Lohnsteuer für mehrjährige Tätigkeit.
         * 0 = normale Steuerberechnung
         * 1 = Steuerberechnung für mehrjährige Tätigkeit
         * 2 = entfällt
         */
        KENNVMT: 0,

        /**
         * Summe der Freibetraege fuer Kinder in EURO
         */
        KFB: decimal.NewFromInt(0),

        /**
         * Beitragssatz des Arbeitgebers zur Krankenversicherung
         */
        KVSATZAG: decimal.NewFromInt(0),

        /**
         * Beitragssatz des Arbeitnehmers zur Krankenversicherung
         */
        KVSATZAN: decimal.NewFromInt(0),

        /**
         * Kennzahl fuer die Einkommensteuer-Tabellenart:
         * 1 = Grundtabelle
         * 2 = Splittingtabelle
         */
        KZTAB: 0,

        /**
         * Jahreslohnsteuer in EURO
         */
        LSTJAHR: decimal.NewFromInt(0),

        /**
         * Zwischenfelder der Jahreslohnsteuer in Cent
         */
        LST1: decimal.NewFromInt(0),
        LST2: decimal.NewFromInt(0),
        LST3: decimal.NewFromInt(0),
        LSTOSO: decimal.NewFromInt(0),
        LSTSO: decimal.NewFromInt(0),

        /**
         * Mindeststeuer fuer die Steuerklassen V und VI in EURO
         */
        MIST: decimal.NewFromInt(0),

        /**
         * Beitragssatz des Arbeitgebers zur Pflegeversicherung
         */
        PVSATZAG: decimal.NewFromInt(0),

        /**
         * Beitragssatz des Arbeitnehmers zur Pflegeversicherung
         */
        PVSATZAN: decimal.NewFromInt(0),

        /**
         * Rechenwert in Gleitkommadarstellung
         */
        RW: decimal.NewFromInt(0),

        /**
         * Sonderausgaben-Pauschbetrag in EURO
         */
        SAP: decimal.NewFromInt(0),

        /**
         * Freigrenze fuer den Solidaritaetszuschlag in EURO
         */
        SOLZFREI: decimal.NewFromInt(0),

        /**
         * Solidaritaetszuschlag auf die Jahreslohnsteuer in EURO, C (2 Dezimalstellen)
         */
        SOLZJ: decimal.NewFromInt(0),

        /**
         * Zwischenwert fuer den Solidaritaetszuschlag auf die Jahreslohnsteuer
         * in EURO, C (2 Dezimalstellen)
         */
        SOLZMIN: decimal.NewFromInt(0),

        /**
         * Tarifliche Einkommensteuer in EURO
         */
        ST: decimal.NewFromInt(0),

        /**
         * Tarifliche Einkommensteuer auf das 1,25-fache ZX in EURO
         */
        ST1: decimal.NewFromInt(0),

        /**
         * Tarifliche Einkommensteuer auf das 0,75-fache ZX in EURO
         */
        ST2: decimal.NewFromInt(0),

        /**
         * Zwischenfeld zur Ermittlung der Steuer auf Vergütungen für mehrjährige Tätigkeit
         */
        STOVMT: decimal.NewFromInt(0),

        /**
         * Bemessungsgrundlage fuer den Versorgungsfreibetrag in Cents
         */
        VBEZB: decimal.NewFromInt(0),

        /**
         * Bemessungsgrundlage für den Versorgungsfreibetrag in Cent für
         * den sonstigen Bezug
         */
        VBEZBSO: decimal.NewFromInt(0),

        /**
         * Hoechstbetrag der Vorsorgepauschale nach Alterseinkuenftegesetz in EURO, C
         */
        VHB: decimal.NewFromInt(0),

        /**
         * Vorsorgepauschale in EURO, C (2 Dezimalstellen)
         */
        VSP: decimal.NewFromInt(0),

        /**
         * Vorsorgepauschale nach Alterseinkuenftegesetz in EURO, C
         */
        VSPN: decimal.NewFromInt(0),

        /**
         * Zwischenwert 1 bei der Berechnung der Vorsorgepauschale nach
         * dem Alterseinkuenftegesetz in EURO, C (2 Dezimalstellen)
         */
        VSP1: decimal.NewFromInt(0),

        /**
         * Zwischenwert 2 bei der Berechnung der Vorsorgepauschale nach
         * dem Alterseinkuenftegesetz in EURO, C (2 Dezimalstellen)
         */
        VSP2: decimal.NewFromInt(0),

        /**
         * Vorsorgepauschale mit Teilbeträgen für die gesetzliche Kranken- und
         * soziale Pflegeversicherung nach fiktiven Beträgen oder ggf. für die
         * private Basiskrankenversicherung und private Pflege-Pflichtversicherung
         * in Euro, Cent (2 Dezimalstellen)
         */
        VSP3: decimal.NewFromInt(0),

        /**
         * Hoechstbetrag der Vorsorgepauschale nach § 10c Abs. 3 EStG in EURO
         */
        VSPKURZ: decimal.NewFromInt(0),

        /**
         * Hoechstbetrag der Vorsorgepauschale nach § 10c Abs. 2 Nr. 2 EStG in EURO
         */
        VSPMAX1: decimal.NewFromInt(0),

        /**
         * Hoechstbetrag der Vorsorgepauschale nach § 10c Abs. 2 Nr. 3 EStG in EURO
         */
        VSPMAX2: decimal.NewFromInt(0),

        /**
         * Vorsorgepauschale nach § 10c Abs. 2 Satz 2 EStG vor der Hoechstbetragsberechnung
         * in EURO, C (2 Dezimalstellen)
         */
        VSPO: decimal.NewFromInt(0),

        /**
         * Fuer den Abzug nach § 10c Abs. 2 Nrn. 2 und 3 EStG verbleibender
         * Rest von VSPO in EURO, C (2 Dezimalstellen)
         */
        VSPREST: decimal.NewFromInt(0),

        /**
         * Hoechstbetrag der Vorsorgepauschale nach § 10c Abs. 2 Nr. 1 EStG
         * in EURO, C (2 Dezimalstellen)
         */
        VSPVOR: decimal.NewFromInt(0),

        /**
         * Zu versteuerndes Einkommen gem. § 32a Abs. 1 und 2 EStG €, C
         * (2 Dezimalstellen)
         */
        X: decimal.NewFromInt(0),

        /**
         * gem. § 32a Abs. 1 EStG (6 Dezimalstellen)
         */
        Y: decimal.NewFromInt(0),

        /**
         * Auf einen Jahreslohn hochgerechnetes RE4 in €, C (2 Dezimalstellen)
         * nach Abzug der Freibeträge nach § 39 b Abs. 2 Satz 3 und 4.
         */
        ZRE4: decimal.NewFromInt(0),

        /**
         * Auf einen Jahreslohn hochgerechnetes RE4 in €, C (2 Dezimalstellen)
         */
        ZRE4J: decimal.NewFromInt(0),

        /**
         * Auf einen Jahreslohn hochgerechnetes RE4 in €, C (2 Dezimalstellen)
         * nach Abzug des Versorgungsfreibetrags und des Alterentlastungsbetrags
         * zur Berechnung der Vorsorgepauschale in €, Cent (2 Dezimalstellen)
         */
        ZRE4VP: decimal.NewFromInt(0),

        /**
         * Feste Tabellenfreibeträge (ohne Vorsorgepauschale) in €, Cent
         * (2 Dezimalstellen)
         */
        ZTABFB: decimal.NewFromInt(0),

        /**
         * Auf einen Jahreslohn hochgerechnetes (VBEZ abzueglich FVB) in
         * EURO, C (2 Dezimalstellen)
         */
        ZVBEZ: decimal.NewFromInt(0),

        /**
         * Auf einen Jahreslohn hochgerechnetes VBEZ in €, C (2 Dezimalstellen)
         */
        ZVBEZJ: decimal.NewFromInt(0),

        /**
         * Zu versteuerndes Einkommen in €, C (2 Dezimalstellen)
         */
        ZVE: decimal.NewFromInt(0),

        /**
         * Zwischenfelder zu X fuer die Berechnung der Steuer nach § 39b
         * Abs. 2 Satz 7 EStG in €
         */
        ZX: decimal.NewFromInt(0),
        ZZX: decimal.NewFromInt(0),
        HOCH: decimal.NewFromInt(0),
        VERGL: decimal.NewFromInt(0),

        /**
         * Jahreswert der berücksichtigten Beiträge zur privaten Basis-Krankenversicherung und
         * privaten Pflege-Pflichtversicherung (ggf. auch die Mindestvorsorgepauschale) in Cent.
         */
        VKV: decimal.NewFromInt(0),
    }
}

func (this *Lohnsteuer2014) SetAf(value int64) {
    this.af = value
}

func (this *Lohnsteuer2014) SetAjahr(value int64) {
    this.AJAHR = value
}

func (this *Lohnsteuer2014) SetAlter1(value int64) {
    this.ALTER1 = value
}

func (this *Lohnsteuer2014) SetEntsch(value decimal.Decimal) {
    this.ENTSCH = value
}

func (this *Lohnsteuer2014) SetF(value int64) {
    this.f = value
}

func (this *Lohnsteuer2014) SetJfreib(value decimal.Decimal) {
    this.JFREIB = value
}

func (this *Lohnsteuer2014) SetJhinzu(value decimal.Decimal) {
    this.JHINZU = value
}

func (this *Lohnsteuer2014) SetJre4(value decimal.Decimal) {
    this.JRE4 = value
}

func (this *Lohnsteuer2014) SetJvbez(value decimal.Decimal) {
    this.JVBEZ = value
}

func (this *Lohnsteuer2014) SetKrv(value int64) {
    this.KRV = value
}

func (this *Lohnsteuer2014) SetLzz(value int64) {
    this.LZZ = value
}

func (this *Lohnsteuer2014) SetLzzfreib(value decimal.Decimal) {
    this.LZZFREIB = value
}

func (this *Lohnsteuer2014) SetLzzhinzu(value decimal.Decimal) {
    this.LZZHINZU = value
}

func (this *Lohnsteuer2014) SetPkpv(value decimal.Decimal) {
    this.PKPV = value
}

func (this *Lohnsteuer2014) SetPkv(value int64) {
    this.PKV = value
}

func (this *Lohnsteuer2014) SetPvs(value int64) {
    this.PVS = value
}

func (this *Lohnsteuer2014) SetPvz(value int64) {
    this.PVZ = value
}

func (this *Lohnsteuer2014) SetR(value int64) {
    this.R = value
}

func (this *Lohnsteuer2014) SetRe4(value decimal.Decimal) {
    this.RE4 = value
}

func (this *Lohnsteuer2014) SetSonstb(value decimal.Decimal) {
    this.SONSTB = value
}

func (this *Lohnsteuer2014) SetSterbe(value decimal.Decimal) {
    this.STERBE = value
}

func (this *Lohnsteuer2014) SetStkl(value int64) {
    this.STKL = value
}

func (this *Lohnsteuer2014) SetVbez(value decimal.Decimal) {
    this.VBEZ = value
}

func (this *Lohnsteuer2014) SetVbezm(value decimal.Decimal) {
    this.VBEZM = value
}

func (this *Lohnsteuer2014) SetVbezs(value decimal.Decimal) {
    this.VBEZS = value
}

func (this *Lohnsteuer2014) SetVbs(value decimal.Decimal) {
    this.VBS = value
}

func (this *Lohnsteuer2014) SetVjahr(value int64) {
    this.VJAHR = value
}

func (this *Lohnsteuer2014) SetVkapa(value decimal.Decimal) {
    this.VKAPA = value
}

func (this *Lohnsteuer2014) SetVmt(value decimal.Decimal) {
    this.VMT = value
}

func (this *Lohnsteuer2014) SetZkf(value decimal.Decimal) {
    this.ZKF = value
}

func (this *Lohnsteuer2014) SetZmvb(value int64) {
    this.ZMVB = value
}

func (this *Lohnsteuer2014) SetJre4ent(value decimal.Decimal) {
    this.JRE4ENT = value
}

func (this *Lohnsteuer2014) SetSonstent(value decimal.Decimal) {
    this.SONSTENT = value
}

func (this *Lohnsteuer2014) GetBk() decimal.Decimal {
    return this.BK
}

func (this *Lohnsteuer2014) GetBks() decimal.Decimal {
    return this.BKS
}

func (this *Lohnsteuer2014) GetBkv() decimal.Decimal {
    return this.BKV
}

func (this *Lohnsteuer2014) GetLstlzz() decimal.Decimal {
    return this.LSTLZZ
}

func (this *Lohnsteuer2014) GetSolzlzz() decimal.Decimal {
    return this.SOLZLZZ
}

func (this *Lohnsteuer2014) GetSolzs() decimal.Decimal {
    return this.SOLZS
}

func (this *Lohnsteuer2014) GetSolzv() decimal.Decimal {
    return this.SOLZV
}

func (this *Lohnsteuer2014) GetSts() decimal.Decimal {
    return this.STS
}

func (this *Lohnsteuer2014) GetStv() decimal.Decimal {
    return this.STV
}

func (this *Lohnsteuer2014) GetVkvlzz() decimal.Decimal {
    return this.VKVLZZ
}

func (this *Lohnsteuer2014) GetVkvsonst() decimal.Decimal {
    return this.VKVSONST
}

/**
 * PROGRAMMABLAUFPLAN, PAP Seite 12
 */
func (this *Lohnsteuer2014) MAIN() {
    this.MRE4JL()
    this.VBEZBSO = decimal.NewFromInt(0)
    this.KENNVMT = 0
    this.MRE4()
    this.MRE4ABZ()
    this.MZTABFB()
    this.MLSTJAHR()
    this.LSTJAHR = this.ST.Mul(decimal.NewFromInt(this.f)).Round(0)
    this.JW = this.LSTJAHR.Mul(this.ZAHL100)
    this.UPLSTLZZ()
    this.UPVKVLZZ()
    if (this.ZKF.Cmp(decimal.NewFromInt(0)) == 1) {
        this.ZTABFB = this.ZTABFB.Add(this.KFB).Round(2)
        this.MRE4ABZ()
        this.MLSTJAHR()
        this.JBMG = this.ST.Mul(decimal.NewFromInt(this.f)).Round(0)
    } else {
        this.JBMG = this.LSTJAHR
    }
    this.MSOLZ()
    this.MSONST()
    this.MVMT()
}

/**
 * Ermittlung des Jahresarbeitslohns nach § 39 b Abs. 2 Satz 2 EStG, PAP Seite 12
 */
func (this *Lohnsteuer2014) MRE4JL() {
    if (this.LZZ == 1) {
        this.ZRE4J = this.RE4.DivRound(this.ZAHL100, 2)
        this.ZVBEZJ = this.VBEZ.DivRound(this.ZAHL100, 2)
        this.JLFREIB = this.LZZFREIB.DivRound(this.ZAHL100, 2)
        this.JLHINZU = this.LZZHINZU.DivRound(this.ZAHL100, 2)
    } else {
        if (this.LZZ == 2) {
            this.ZRE4J = this.RE4.Mul(this.ZAHL12).DivRound(this.ZAHL100, 2)
            this.ZVBEZJ = this.VBEZ.Mul(this.ZAHL12).DivRound(this.ZAHL100, 2)
            this.JLFREIB = this.LZZFREIB.Mul(this.ZAHL12).DivRound(this.ZAHL100, 2)
            this.JLHINZU = this.LZZHINZU.Mul(this.ZAHL12).DivRound(this.ZAHL100, 2)
        } else {
            if (this.LZZ == 3) {
                this.ZRE4J = this.RE4.Mul(this.ZAHL360).DivRound(this.ZAHL700, 2)
                this.ZVBEZJ = this.VBEZ.Mul(this.ZAHL360).DivRound(this.ZAHL700, 2)
                this.JLFREIB = this.LZZFREIB.Mul(this.ZAHL360).DivRound(this.ZAHL700, 2)
                this.JLHINZU = this.LZZHINZU.Mul(this.ZAHL360).DivRound(this.ZAHL700, 2)
            } else {
                this.ZRE4J = this.RE4.Mul(this.ZAHL360).DivRound(this.ZAHL100, 2)
                this.ZVBEZJ = this.VBEZ.Mul(this.ZAHL360).DivRound(this.ZAHL100, 2)
                this.JLFREIB = this.LZZFREIB.Mul(this.ZAHL360).DivRound(this.ZAHL100, 2)
                this.JLHINZU = this.LZZHINZU.Mul(this.ZAHL360).DivRound(this.ZAHL100, 2)
            }
        }
    }
    if (this.af == 0) {
        this.f = 1
    }
}

/**
 * Freibeträge für Versorgungsbezüge, Altersentlastungsbetrag (§ 39b Abs. 2 Satz 3 EStG), PAP Seite 13
 */
func (this *Lohnsteuer2014) MRE4() {
    if (this.ZVBEZJ.Cmp(decimal.NewFromInt(0)) == 0) {
        this.FVBZ = decimal.NewFromInt(0)
        this.FVB = decimal.NewFromInt(0)
        this.FVBZSO = decimal.NewFromInt(0)
        this.FVBSO = decimal.NewFromInt(0)
    } else {
        if (this.VJAHR < 2006) {
            this.J = 1
        } else {
            if (this.VJAHR < 2040) {
                this.J = this.VJAHR - 2004
            } else {
                this.J = 36
            }
        }
        if (this.LZZ == 1) {
            this.VBEZB = this.VBEZM.Mul(decimal.NewFromInt(this.ZMVB)).Add(this.VBEZS)
            this.HFVB = this.TAB2[this.J].Div(this.ZAHL12).Mul(decimal.NewFromInt(this.ZMVB))
            this.FVBZ = this.TAB3[this.J].Div(this.ZAHL12).Mul(decimal.NewFromInt(this.ZMVB)).Round(0)
        } else {
            this.VBEZB = this.VBEZM.Mul(this.ZAHL12).Add(this.VBEZS).Round(2)
            this.HFVB = this.TAB2[this.J]
            this.FVBZ = this.TAB3[this.J]
        }
        this.FVB = this.VBEZB.Mul(this.TAB1[this.J]).Div(this.ZAHL100).Round(2)
        if (this.FVB.Cmp(this.HFVB) == 1) {
            this.FVB = this.HFVB
        }
        this.FVBSO = this.FVB.Add(this.VBEZBSO.Mul(this.TAB1[this.J]).Div(this.ZAHL100)).Round(2)
        if (this.FVBSO.Cmp(this.TAB2[this.J]) == 1) {
            this.FVBSO = this.TAB2[this.J]
        }
        this.HFVBZSO = this.VBEZB.Add(this.VBEZBSO).Div(this.ZAHL100).Sub(this.FVBSO).Round(2)
        this.FVBZSO = this.FVBZ.Add(this.VBEZBSO.Div(this.ZAHL100)).Round(0)
        if (this.FVBZSO.Cmp(this.HFVBZSO) == 1) {
            this.FVBZSO = this.HFVBZSO.Round(0)
        }
        if (this.FVBZSO.Cmp(this.TAB3[this.J]) == 1) {
            this.FVBZSO = this.TAB3[this.J]
        }
        this.HFVBZ = this.VBEZB.Div(this.ZAHL100).Sub(this.FVB).Round(2)
        if (this.FVBZ.Cmp(this.HFVBZ) == 1) {
            this.FVBZ = this.HFVBZ.Round(0)
        }
    }
    this.MRE4ALTE()
}

/**
 * Altersentlastungsbetrag (§ 39b Abs. 2 Satz 3 EStG), PAP Seite 14
 */
func (this *Lohnsteuer2014) MRE4ALTE() {
    if (this.ALTER1 == 0) {
        this.ALTE = decimal.NewFromInt(0)
    } else {
        if (this.AJAHR < 2006) {
            this.K = 1
        } else {
            if (this.AJAHR < 2040) {
                this.K = this.AJAHR - 2004
            } else {
                this.K = 36
            }
        }
        this.BMG = this.ZRE4J.Sub(this.ZVBEZJ)
        this.ALTE = this.BMG.Mul(this.TAB4[this.K]).Round(0)
        this.HBALTE = this.TAB5[this.K]
        if (this.ALTE.Cmp(this.HBALTE) == 1) {
            this.ALTE = this.HBALTE
        }
    }
}

/**
 * Ermittlung des Jahresarbeitslohns nach Abzug der Freibeträge nach § 39 b Abs. 2 Satz 3 und 4 EStG, PAP Seite 16
 */
func (this *Lohnsteuer2014) MRE4ABZ() {
    this.ZRE4 = this.ZRE4J.Sub(this.FVB).Sub(this.ALTE).Sub(this.JLFREIB).Add(this.JLHINZU).Round(2)
    if (this.ZRE4.Cmp(decimal.NewFromInt(0)) == -1) {
        this.ZRE4 = decimal.NewFromInt(0)
    }
    this.ZRE4VP = this.ZRE4J
    if (this.KENNVMT == 2) {
        this.ZRE4VP = this.ZRE4VP.Sub(this.ENTSCH.Div(this.ZAHL100)).Round(2)
    }
    this.ZVBEZ = this.ZVBEZJ.Sub(this.FVB).Round(2)
    if (this.ZVBEZ.Cmp(decimal.NewFromInt(0)) == -1) {
        this.ZVBEZ = decimal.NewFromInt(0)
    }
}

/**
 * Ermittlung der festen Tabellenfreibeträge (ohne Vorsorgepauschale), PAP Seite 17
 */
func (this *Lohnsteuer2014) MZTABFB() {
    this.ANP = decimal.NewFromInt(0)
    if (this.ZVBEZ.Cmp(decimal.NewFromInt(0)) >= 0 && this.ZVBEZ.Cmp(this.FVBZ) == -1) {
        this.FVBZ = decimal.NewFromInt(this.ZVBEZ.IntPart())
    }
    if (this.STKL < 6) {
        if (this.ZVBEZ.Cmp(decimal.NewFromInt(0)) == 1) {
            if (this.ZVBEZ.Sub(this.FVBZ).Cmp(decimal.NewFromInt(102)) == -1) {
                this.ANP = this.ZVBEZ.Sub(this.FVBZ).Round(0)
            } else {
                this.ANP = decimal.NewFromInt(102)
            }
        }
    } else {
        this.FVBZ = decimal.NewFromInt(0)
        this.FVBZSO = decimal.NewFromInt(0)
    }
    if (this.STKL < 6) {
        if (this.ZRE4.Cmp(this.ZVBEZ) == 1) {
            if (this.ZRE4.Sub(this.ZVBEZ).Cmp(this.ZAHL1000) == -1) {
                this.ANP = this.ANP.Add(this.ZRE4).Sub(this.ZVBEZ).Round(0)
            } else {
                this.ANP = this.ANP.Add(this.ZAHL1000)
            }
        }
    }
    this.KZTAB = 1
    if (this.STKL == 1) {
        this.SAP = decimal.NewFromInt(36)
        this.KFB = this.ZKF.Mul(decimal.NewFromInt(7008)).Round(0)
    } else {
        if (this.STKL == 2) {
            this.EFA = decimal.NewFromInt(1308)
            this.SAP = decimal.NewFromInt(36)
            this.KFB = this.ZKF.Mul(decimal.NewFromInt(7008)).Round(0)
        } else {
            if (this.STKL == 3) {
                this.KZTAB = 2
                this.SAP = decimal.NewFromInt(36)
                this.KFB = this.ZKF.Mul(decimal.NewFromInt(7008)).Round(0)
            } else {
                if (this.STKL == 4) {
                    this.SAP = decimal.NewFromInt(36)
                    this.KFB = this.ZKF.Mul(decimal.NewFromInt(3504)).Round(0)
                } else {
                    if (this.STKL == 5) {
                        this.SAP = decimal.NewFromInt(36)
                        this.KFB = decimal.NewFromInt(0)
                    } else {
                        this.KFB = decimal.NewFromInt(0)
                    }
                }
            }
        }
    }
    this.ZTABFB = this.EFA.Add(this.ANP).Add(this.SAP).Add(this.FVBZ).Round(2)
}

/**
 * Ermittlung Jahreslohnsteuer, PAP Seite 18
 */
func (this *Lohnsteuer2014) MLSTJAHR() {
    this.UPEVP()
    if (this.KENNVMT != 1) {
        this.ZVE = this.ZRE4.Sub(this.ZTABFB).Sub(this.VSP).Round(2)
        this.UPMLST()
    } else {
        this.ZVE = this.ZRE4.Sub(this.ZTABFB).Sub(this.VSP).Sub(this.VMT.Div(this.ZAHL100)).Sub(this.VKAPA.Div(this.ZAHL100)).Round(2)
        if (this.ZVE.Cmp(decimal.NewFromInt(0)) == -1) {
            this.ZVE = this.ZVE.Add(this.VMT.Div(this.ZAHL100)).Add(this.VKAPA.Div(this.ZAHL100)).Div(this.ZAHL5).Round(2)
            this.UPMLST()
            this.ST = this.ST.Mul(this.ZAHL5).Round(0)
        } else {
            this.UPMLST()
            this.STOVMT = this.ST
            this.ZVE = this.ZVE.Add(this.VMT.Add(this.VKAPA).Div(this.ZAHL500)).Round(2)
            this.UPMLST()
            this.ST = this.ST.Sub(this.STOVMT).Mul(this.ZAHL5).Add(this.STOVMT).Round(0)
        }
    }
}

func (this *Lohnsteuer2014) UPVKVLZZ() {
    this.UPVKV()
    this.JW = this.VKV
    this.UPANTEIL()
    this.VKVLZZ = this.ANTEIL1
}

func (this *Lohnsteuer2014) UPVKV() {
    if (this.PKV > 0) {
        if (this.VSP2.Cmp(this.VSP3) == 1) {
            this.VKV = this.VSP2.Mul(this.ZAHL100)
        } else {
            this.VKV = this.VSP3.Mul(this.ZAHL100)
        }
    } else {
        this.VKV = decimal.NewFromInt(0)
    }
}

func (this *Lohnsteuer2014) UPLSTLZZ() {
    this.JW = this.LSTJAHR.Mul(this.ZAHL100)
    this.UPANTEIL()
    this.LSTLZZ = this.ANTEIL1
}

/**
 * PAP Seite 20 Ermittlung der Jahreslohnsteuer aus dem Einkommensteuertarif
 */
func (this *Lohnsteuer2014) UPMLST() {
    if (this.ZVE.Cmp(this.ZAHL1) == -1) {
        this.ZVE = decimal.NewFromInt(0)
        this.X = decimal.NewFromInt(0)
    } else {
        this.X = this.ZVE.Div(decimal.NewFromInt(this.KZTAB)).Round(0)
    }
    if (this.STKL < 5) {
        this.UPTAB14()
    } else {
        this.MST5_6()
    }
}

/**
 * Neu 2014
 */
func (this *Lohnsteuer2014) UPEVP() {
    if (this.KRV > 1) {
        this.VSP1 = decimal.NewFromInt(0)
    } else {
        if (this.KRV == 0) {
            if (this.ZRE4VP.Cmp(this.RENTBEMESSUNGSGR_WEST) == 1) {
                this.ZRE4VP = this.RENTBEMESSUNGSGR_WEST
            }
        } else {
            if (this.ZRE4VP.Cmp(this.RENTBEMESSUNGSGR_OST) == 1) {
                this.ZRE4VP = this.RENTBEMESSUNGSGR_OST
            }
        }
        this.VSP1 = this.ZRE4VP.Mul(decimal.NewFromFloat(0.56)).Round(2)
        this.VSP1 = this.VSP1.Mul(decimal.NewFromFloat(0.0945)).Round(2)
    }
    this.VSP2 = this.ZRE4VP.Mul(decimal.NewFromFloat(0.12)).Round(2)
    if (this.STKL == 3) {
        this.VHB = decimal.NewFromInt(3000)
    } else {
        this.VHB = decimal.NewFromInt(1900)
    }
    if (this.VSP2.Cmp(this.VHB) == 1) {
        this.VSP2 = this.VHB
    }
    this.VSPN = this.VSP1.Add(this.VSP2).Round(0)
    this.MVSP()
    if (this.VSPN.Cmp(this.VSP) == 1) {
        this.VSP = this.VSPN.Round(2)
    }
}

/**
 * Neu 2014
 */
func (this *Lohnsteuer2014) MVSP() {
    if (this.ZRE4VP.Cmp(decimal.NewFromInt(48600)) == 1) {
        this.ZRE4VP = decimal.NewFromInt(48600)
    }
    if (this.PKV > 0) {
        if (this.STKL == 6) {
            this.VSP3 = decimal.NewFromInt(0)
        } else {
            this.VSP3 = this.PKPV.Mul(this.ZAHL12).Div(this.ZAHL100)
            if (this.PKV == 2) {
                this.KVSATZAG = decimal.NewFromFloat(0.07).Round(5)
                if (this.PVS == 1) {
                    this.PVSATZAG = decimal.NewFromFloat(0.00525).Round(5)
                } else {
                    this.PVSATZAG = decimal.NewFromFloat(0.01025).Round(5)
                }
                this.VSP3 = this.VSP3.Sub(this.ZRE4VP.Mul(this.KVSATZAG.Add(this.PVSATZAG))).Round(2)
            }
        }
    } else {
        this.KVSATZAN = decimal.NewFromFloat(0.079).Round(5)
        if (this.PVS == 1) {
            this.PVSATZAN = decimal.NewFromFloat(0.01525).Round(5)
        } else {
            this.PVSATZAN = decimal.NewFromFloat(0.01025).Round(5)
        }
        if (this.PVZ == 1) {
            this.PVSATZAN = this.PVSATZAN.Add(decimal.NewFromFloat(0.0025))
        }
        this.VSP3 = this.ZRE4VP.Mul(this.KVSATZAN.Add(this.PVSATZAN)).Round(2)
    }
    this.VSP = this.VSP3.Add(this.VSP1).Round(0)
}

func (this *Lohnsteuer2014) UMVSP() {
    this.VSPVOR = this.VSPVOR.Sub(this.ZRE4VP.Mul(decimal.NewFromFloat(0.16))).Round(2)
    if (this.VSPVOR.Cmp(decimal.NewFromInt(0)) == -1) {
        this.VSPVOR = decimal.NewFromInt(0)
    }
    if (this.VSPO.Cmp(this.VSPVOR) == 1) {
        this.VSP = this.VSPVOR
        this.VSPREST = this.VSPO.Sub(this.VSPVOR)
        if (this.VSPREST.Cmp(this.VSPMAX1) == 1) {
            this.VSP = this.VSP.Add(this.VSPMAX1)
            this.VSPREST = this.VSPREST.Sub(this.VSPMAX1).DivRound(this.ZAHL2, 2)
            if (this.VSPREST.Cmp(this.VSPMAX2) == 1) {
                this.VSP = this.VSP.Add(this.VSPMAX2).Round(0)
            } else {
                this.VSP = this.VSP.Add(this.VSPREST).Round(0)
            }
        } else {
            this.VSP = this.VSP.Add(this.VSPREST).Round(0)
        }
    } else {
        this.VSP = this.VSPO.Round(0)
    }
}

/**
 * Neu 2014
 */
func (this *Lohnsteuer2014) MST5_6() {
    this.ZZX = this.X
    if (this.ZZX.Cmp(decimal.NewFromInt(26441)) == 1) {
        this.ZX = decimal.NewFromInt(26441)
        this.UP5_6()
        if (this.ZZX.Cmp(decimal.NewFromInt(200584)) == 1) {
            this.ST = this.ST.Add(decimal.NewFromInt(200584).Sub(decimal.NewFromInt(26441)).Mul(decimal.NewFromFloat(0.42))).Round(0)
            this.ST = this.ST.Add(this.ZZX.Sub(decimal.NewFromInt(200584)).Mul(decimal.NewFromFloat(0.45))).Round(0)
        } else {
            this.ST = this.ST.Add(this.ZZX.Sub(decimal.NewFromInt(26441)).Mul(decimal.NewFromFloat(0.42))).Round(0)
        }
    } else {
        this.ZX = this.ZZX
        this.UP5_6()
        if (this.ZZX.Cmp(decimal.NewFromInt(9763)) == 1) {
            this.VERGL = this.ST
            this.ZX = decimal.NewFromInt(9763)
            this.UP5_6()
            this.HOCH = this.ST.Add(this.ZZX.Sub(decimal.NewFromInt(9763)).Mul(decimal.NewFromFloat(0.42))).Round(0)
            if (this.HOCH.Cmp(this.VERGL) == -1) {
                this.ST = this.HOCH
            } else {
                this.ST = this.VERGL
            }
        }
    }
}

/**
 * Unterprogramm zur Lohnsteuer fuer die Steuerklassen V und VI (§ 39b Abs. 2 Satz 7 EStG), PAP Seite 24
 */
func (this *Lohnsteuer2014) UP5_6() {
    this.X = this.ZX.Mul(decimal.NewFromFloat(1.25)).Round(2)
    this.UPTAB14()
    this.ST1 = this.ST
    this.X = this.ZX.Mul(decimal.NewFromFloat(0.75)).Round(2)
    this.UPTAB14()
    this.ST2 = this.ST
    this.DIFF = this.ST1.Sub(this.ST2).Mul(this.ZAHL2)
    this.MIST = this.ZX.Mul(decimal.NewFromFloat(0.14)).Round(0)
    if (this.MIST.Cmp(this.DIFF) == 1) {
        this.ST = this.MIST
    } else {
        this.ST = this.DIFF
    }
}

/**
 * Solidaritaetszuschlag, PAP Seite 25
 */
func (this *Lohnsteuer2014) MSOLZ() {
    this.SOLZFREI = decimal.NewFromInt(972 * this.KZTAB)
    if (this.JBMG.Cmp(this.SOLZFREI) == 1) {
        this.SOLZJ = this.JBMG.Mul(decimal.NewFromFloat(5.5)).Div(this.ZAHL100).Round(2)
        this.SOLZMIN = this.JBMG.Sub(this.SOLZFREI).Mul(decimal.NewFromInt(20)).Div(this.ZAHL100).Round(2)
        if (this.SOLZMIN.Cmp(this.SOLZJ) == -1) {
            this.SOLZJ = this.SOLZMIN
        }
        this.JW = this.SOLZJ.Mul(this.ZAHL100).Round(0)
        this.UPANTEIL()
        this.SOLZLZZ = this.ANTEIL1
    } else {
        this.SOLZLZZ = decimal.NewFromInt(0)
    }
    if (this.R > 0) {
        this.JW = this.JBMG.Mul(this.ZAHL100)
        this.UPANTEIL()
        this.BK = this.ANTEIL1
    } else {
        this.BK = decimal.NewFromInt(0)
    }
}

/**
 * Anteil von Jahresbetraegen fuer einen LZZ (§ 39b Abs. 2 Satz 9 EStG), PAP Seite 26
 */
func (this *Lohnsteuer2014) UPANTEIL() {
    if (this.LZZ == 1) {
        this.ANTEIL1 = this.JW
    } else {
        if (this.LZZ == 2) {
            this.ANTEIL1 = this.JW.DivRound(this.ZAHL12, 0)
        } else {
            if (this.LZZ == 3) {
                this.ANTEIL1 = this.JW.Mul(this.ZAHL7).DivRound(this.ZAHL360, 0)
            } else {
                this.ANTEIL1 = this.JW.DivRound(this.ZAHL360, 0)
            }
        }
    }
}

/**
 * Berechnung sonstiger Bezuege nach § 39b Abs. 3 Saetze 1 bis 8 EStG), PAP Seite 27
 */
func (this *Lohnsteuer2014) MSONST() {
    this.LZZ = 1
    if (this.ZMVB == 0) {
        this.ZMVB = 12
    }
    if (this.SONSTB.Cmp(decimal.NewFromInt(0)) == 0) {
        this.VKVSONST = decimal.NewFromInt(0)
        this.LSTSO = decimal.NewFromInt(0)
        this.STS = decimal.NewFromInt(0)
        this.SOLZS = decimal.NewFromInt(0)
        this.BKS = decimal.NewFromInt(0)
    } else {
        this.MOSONST()
        this.UPVKV()
        this.VKVSONST = this.VKV
        this.ZRE4J = this.JRE4.Add(this.SONSTB).Div(this.ZAHL100).Round(2)
        this.ZVBEZJ = this.JVBEZ.Add(this.VBS).Div(this.ZAHL100).Round(2)
        this.VBEZBSO = this.STERBE
        this.MRE4SONST()
        this.MLSTJAHR()
        this.UPVKV()
        this.VKVSONST = this.VKV.Sub(this.VKVSONST)
        this.LSTSO = this.ST.Mul(this.ZAHL100)
        this.STS = this.LSTSO.Sub(this.LSTOSO).Mul(decimal.NewFromInt(this.f)).DivRound(this.ZAHL100, 0).Mul(this.ZAHL100)
        if (this.STS.Cmp(decimal.NewFromInt(0)) == -1) {
            this.STS = decimal.NewFromInt(0)
        }
        this.SOLZS = this.STS.Mul(decimal.NewFromFloat(5.5)).DivRound(this.ZAHL100, 0)
        if (this.R > 0) {
            this.BKS = this.STS
        } else {
            this.BKS = decimal.NewFromInt(0)
        }
    }
}

/**
 * Berechnung der Verguetung fuer mehrjaehrige Taetigkeit nach § 39b Abs. 3 Satz 9 und 10 EStG), PAP Seite 28
 */
func (this *Lohnsteuer2014) MVMT() {
    if (this.VKAPA.Cmp(decimal.NewFromInt(0)) == -1) {
        this.VKAPA = decimal.NewFromInt(0)
    }
    if (this.VMT.Add(this.VKAPA).Cmp(decimal.NewFromInt(0)) == 1) {
        if (this.LSTSO.Cmp(decimal.NewFromInt(0)) == 0) {
            this.MOSONST()
            this.LST1 = this.LSTOSO
        } else {
            this.LST1 = this.LSTSO
        }
        this.VBEZBSO = this.STERBE.Add(this.VKAPA)
        this.ZRE4J = this.JRE4.Add(this.SONSTB).Add(this.VMT).Add(this.VKAPA).Div(this.ZAHL100).Round(2)
        this.ZVBEZJ = this.JVBEZ.Add(this.VBS).Add(this.VKAPA).Div(this.ZAHL100).Round(2)
        this.KENNVMT = 2
        this.MRE4SONST()
        this.MLSTJAHR()
        this.LST3 = this.ST.Mul(this.ZAHL100)
        this.MRE4ABZ()
        this.ZRE4VP = this.ZRE4VP.Sub(this.JRE4ENT.Div(this.ZAHL100)).Sub(this.SONSTENT.Div(this.ZAHL100))
        this.KENNVMT = 1
        this.MLSTJAHR()
        this.LST2 = this.ST.Mul(this.ZAHL100)
        this.STV = this.LST2.Sub(this.LST1)
        this.LST3 = this.LST3.Sub(this.LST1)
        if (this.LST3.Cmp(this.STV) == -1) {
            this.STV = this.LST3
        }
        if (this.STV.Cmp(decimal.NewFromInt(0)) == -1) {
            this.STV = decimal.NewFromInt(0)
        } else {
            this.STV = this.STV.Mul(decimal.NewFromInt(this.f)).DivRound(this.ZAHL100, 0).Mul(this.ZAHL100)
        }
        this.SOLZV = this.STV.Mul(decimal.NewFromFloat(5.5)).Div(this.ZAHL100).Round(0)
        if (this.R > 0) {
            this.BKV = this.STV
        } else {
            this.BKV = decimal.NewFromInt(0)
        }
    } else {
        this.STV = decimal.NewFromInt(0)
        this.SOLZV = decimal.NewFromInt(0)
        this.BKV = decimal.NewFromInt(0)
    }
}

/**
 * Sonderberechnung ohne sonstige Bezüge für Berechnung bei sonstigen Bezügen oder Vergütung für mehrjährige Tätigkeit, PAP Seite 29
 */
func (this *Lohnsteuer2014) MOSONST() {
    this.ZRE4J = this.JRE4.Div(this.ZAHL100).Round(2)
    this.ZVBEZJ = this.JVBEZ.Div(this.ZAHL100).Round(2)
    this.JLFREIB = this.JFREIB.DivRound(this.ZAHL100, 2)
    this.JLHINZU = this.JHINZU.DivRound(this.ZAHL100, 2)
    this.MRE4()
    this.MRE4ABZ()
    this.ZRE4VP = this.ZRE4VP.Sub(this.JRE4ENT.Div(this.ZAHL100))
    this.MZTABFB()
    this.MLSTJAHR()
    this.LSTOSO = this.ST.Mul(this.ZAHL100)
}

/**
 * Sonderberechnung mit sonstige Bezüge für Berechnung bei sonstigen Bezügen oder Vergütung für mehrjährige Tätigkeit, PAP Seite 29
 */
func (this *Lohnsteuer2014) MRE4SONST() {
    this.MRE4()
    this.FVB = this.FVBSO
    this.MRE4ABZ()
    this.ZRE4VP = this.ZRE4VP.Sub(this.JRE4ENT.Div(this.ZAHL100)).Sub(this.SONSTENT.Div(this.ZAHL100))
    this.FVBZ = this.FVBZSO
    this.MZTABFB()
}

/**
 * Neu 2014
 */
func (this *Lohnsteuer2014) UPTAB14() {
    if (this.X.Cmp(decimal.NewFromInt(8355)) == -1) {
        this.ST = decimal.NewFromInt(0)
    } else {
        if (this.X.Cmp(decimal.NewFromInt(13470)) == -1) {
            this.Y = this.X.Sub(decimal.NewFromInt(8354)).DivRound(decimal.NewFromInt(10000), 6)
            this.RW = this.Y.Mul(decimal.NewFromFloat(974.58))
            this.RW = this.RW.Add(decimal.NewFromInt(1400))
            this.ST = this.RW.Mul(this.Y).Round(0)
        } else {
            if (this.X.Cmp(decimal.NewFromInt(52882)) == -1) {
                this.Y = this.X.Sub(decimal.NewFromInt(13469)).DivRound(decimal.NewFromInt(10000), 6)
                this.RW = this.Y.Mul(decimal.NewFromFloat(228.74))
                this.RW = this.RW.Add(decimal.NewFromInt(2397))
                this.RW = this.RW.Mul(this.Y)
                this.ST = this.RW.Add(decimal.NewFromInt(971)).Round(0)
            } else {
                if (this.X.Cmp(decimal.NewFromInt(250731)) == -1) {
                    this.ST = this.X.Mul(decimal.NewFromFloat(0.42)).Sub(decimal.NewFromInt(8239)).Round(0)
                } else {
                    this.ST = this.X.Mul(decimal.NewFromFloat(0.45)).Sub(decimal.NewFromInt(15761)).Round(0)
                }
            }
        }
    }
    this.ST = this.ST.Mul(decimal.NewFromInt(this.KZTAB))
}

